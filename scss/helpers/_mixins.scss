@charset 'utf-8';

/// 플렉스
// @example scss - 사용법
// 	.foo {
// 		@include flex()
// 	}
@mixin flex-container($direction: row, $wrap: nowrap) {

	display: -ms-flexbox;
	display: -webkit-box;
	display: -webkit-flex;
	display: flex;

	@if $direction == column {
		-webkit-box-orient: vertical;
		@include prefix(flex-direction, $direction, webkit ms);
	}

	@if $wrap == wrap {
		@include prefix(flex-wrap, $wrap, webkit ms);
	}

}

/// 미디어 컨텐츠
// youtube, image 등 가로 사이즈에 맞게 유연한 높이 적용이 필요한 경우
// 부모 요소에 적용
// @example scss - 사용법
// 	.foo {
// 		@include fluid-media(100%, 0);
// 	}
@mixin fluid-media($padding-bottom: 56.25%, $padding-top: 0) {

	overflow: hidden;
	position: relative;
	padding-top: $padding-top;
	padding-bottom: $padding-bottom;
	width: 100%;
	height: 0;
	font-size: 0;
	line-height: 1;

	> * {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}

}

/// clearfix
// @example scss - 사용법
//	.foo {
//		@include clearfix;
//	}
@mixin clearfix {

	&:after {
		display: block;
		clear: both;
		content: "";
	}

}

/// prefix
// @example scss - 사용법
//	.foo {
//		@include prefix(transform, rotate(45deg), webkit ms);
//		@include prefix(transform, rotate(45deg), ('webkit', 'ms'));
//	}
@mixin prefix($property, $value, $prefixes: ()) {

	@if $property == flex {
		min-width: 0;
		-webkit-box-flex: $value;
	}
	@else if $property == align-items {
		@if $value == flex-start {
			-webkit-box-align: start;
		}
		@else if $value == flex-end {
			-webkit-box-align: end;
		}
		@else if $value == flex-center {
			-webkit-box-align: center;
		}
		@else {
			-webkit-box-align: $value;
		}
	}
	@else if $property == justify-content {
		@if $value == flex-start {
			-webkit-box-pack: start;
		}
		@else if $value == flex-end {
			-webkit-box-pack: end;
		}
		@else if $value == flex-center {
			-webkit-box-pack: center;
		}
		@else if $value == space-between {
			-webkit-box-align: justify;
		}
	}

	@each $prefix in $prefixes {
		-#{$prefix}-#{$property}: $value;
	}
	#{$property}: $value;

}

/// browser hack
@mixin hack($browser) {

	@if $browser == ie11 {
		@at-root #{'_:-ms-lang(x)::-ms-backdrop, '} #{&} {
			@content;
		}
	}
	@else if $browser == edge {
		@at-root #{'_:-ms-lang(x)::backdrop, '} #{&} {
			@content;
		}
	}

}

/// transform + backface-visibility
@mixin transform($value, $origin: null, $visibility: visible) {

	@include prefix(transform, $value, webkit ms);
	@if $origin {
		@include prefix(transform-origin, $origin, webkit ms);
	}
	@if $visibility == hidden {
		@include prefix(backface-visibility, hidden, webkit);
	}

}

/// transition
@mixin transition($args...) {

	@include prefix(transition, $args, webkit);

}

/// gradient
@mixin linear-gradient($defaultColor, $angle, $colors...) {

	background: $defaultColor;
	background: -webkit-linear-gradient($angle, $colors);
	background: linear-gradient($angle, $colors);

}

/// 대체텍스트
// @example scss - 사용법
//	.foo {
//		@include text-ir(indent);
//	}
@mixin text-ir($type: indent) {

	@if $type == blind {
		overflow: hidden;
		position: absolute;
		top: 0;
		left: 0;
		width: 0;
		height: 0;
		font-size: 0;
		line-height: 1;
	} @else if $type == indent {
		// 적용 시 display: block 또는 inline-block 적용 필요
		overflow: hidden;
		font-size: 0;
		line-height: 1;
		text-indent: -99999px;
	} @else if $type == wa {
		position: relative;
		z-index: -1;
	}

}


/// 텍스트 말줄임
@mixin text-ellipsis($line: 1, $replace: ellipsis) {

	@if $line > 0 {
		overflow: hidden;
		text-overflow: $replace;

		@if $line < 2 {
			white-space: nowrap;

			.__ios & {
				display: -webkit-box;
				white-space: normal;
				-webkit-box-orient: vertical;
				-webkit-line-clamp: $line;
			}
			
			br {
				display: none;
			}
		} @else {
			display: -webkit-box;
			-webkit-box-orient: vertical;
			-webkit-line-clamp: $line;
		}
	} @else {
		display: block;
		overflow: visible;
		text-overflow: clip;
		white-space: normal;
		-webkit-line-clamp: 0;
		
		br {
			display: inline;
		}
	}

}

/// border triangle
// @example scss - 사용법
//	.foo {
//		@include triangle(#000, left, 3px, 6px);
//	}
@mixin triangle($color, $direction, $size-width, $size-height: $size-width) {

	width: 0;
	height: 0;
	font-size: 0;
	line-height: 1;
	border: $size-width solid transparent;

	@if $direction == bottom {
		border-top: $size-height solid $color;
		border-bottom: 0;
	} @else if $direction == top {
		border-top: 0;
		border-bottom: $size-height solid $color;
	} @else if $direction == left {
		border-right: $size-height solid $color;
		border-left: 0;
	} @else if $direction == right {
		border-right: 0;
		border-left: $size-height solid $color;
	} @else if $direction == top-left {
		border-top: $size-height solid $color;
		border-bottom: 0;
		border-left: 0;
	} @else if $direction == top-right {
		border-top: $size-height solid $color;
		border-bottom: 0;
		border-right: 0;
	} @else if $direction == bottom-left {
		border-top: 0;
		border-bottom: $size-height solid $color;
		border-left: 0;
	} @else if $direction == bottom-right {
		border-top: 0;
		border-bottom: $size-height solid $color;
		border-right: 0;
	}

}

/// opacity IE8
// png 이미지에만 적용됨 (background-color는 반투명 png이미지로 적용)
// @example scss - 사용법
//	.foo {
//		@include opacity(0.1);
//	}
@mixin opacity($opacity, $pointer-events: null) {

    opacity: $opacity;
	
	$ms-opacity: $opacity;
	$important: str-index(inspect($ms-opacity), '!');
	@if $important {
		$ms-opacity: convert-number(str-replace(str-slice(inspect($ms-opacity), 1, $important - 1), ' ', ''));
	}
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$ms-opacity * 100})";

	@if $pointer-events {
		@include prefix(pointer-events, $pointer-events, ms);
	}

}

/// 웹폰트
// @example scss - 사용법
//	.foo {
//		@include font-face('fontname', fonts/filename);
//		@include font-face('fontname', fonts/filename, bold, eot woff2 woff);
//		@include font-face('fontname', fonts/filename, normal, eot woff2 woff ttf svg);
//		@include font-face('fontname', fonts/filename, normal, eot woff2 woff otf svg, italic);
//	}
@mixin font-face($name, $path, $weight: 400, $exts: eot woff2 woff, $style: normal) {

	$src: null;
	$src-eot: null;

	$extmods: (
		eot: '#iefix',
		svg: '#' + str-replace($name, ' ', '_')
	);

	$formats: (
		eot: 'embedded-opentype',
		otf: 'opentype',
		ttf: 'truetype'
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + '.' + $extmod)) format(quote($format)), comma);
		@if $ext == eot {
			$src-eot: url(quote($path + '.' + $ext));
		}
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		@if $src-eot {
			src: $src-eot;// IE9 호환성보기
		}
		src: $src;
	}

}

/// 미디어쿼리
// @example scss - 사용법
//	.foo {
//		width: 100%;
//		@include media(XL) {
//			width: 50%;
//	}
@mixin media($point) {

	@if $point == XXL {
		@media (min-width: 1600px) { @content; }
	} @else if $point == XL {
		@media (min-width: 1280px) { @content; }
	} @else if $point == L {
		@media (min-width: 1024px) { @content; }
	} @else if $point == M {
		@media (min-width: 768px) { @content; }
	} @else if $point == S {
		@media (min-width: 640px) { @content; }
	} @else if $point == XS {
		@media (min-width: 480px) { @content; }
	} @else if $point == XXS {
		@media (min-width: 375px) { @content; }
	} @else {
		@media ($point) { @content; }
	}

}

/// 셀렉터 변경
// $replace-context에 띄어쓰기 사용 시 > 또는 + 필수
@mixin context-replace($target-context, $replace-context) {

	@at-root #{selector-replace(&, $target-context, $replace-context)} {
		// @debug 'replace:' $target-context $replace-context &;
		@content;
	}

}

/// 셀렉터 순서 정리(div.class:before 순으로 정리)
@mixin context-unify($context) {

	@at-root #{selector-unify(&, $context)} {
		// @debug 'unify:' $context &;
		@content;
	}

}

/// 첫 번째 요소에 앞에 셀렉터 추가(.add.context)
@mixin context-first($context) {

	@at-root #{selector-append($context, &)} {
		// @debug 'first:' $context &;
		@content;
	}

}

/// 선택한 요소 앞에 셀렉터 추가(.add.context, .add > .context)
// $add-context에 띄어쓰기 사용 시 > 또는 + 필수
@mixin context-before($add-context, $target-context: null) {

	$selectors: ();
	@each $selector in & {
		$context: if($target-context, $target-context, str-slice(inspect($selector), str-last-index(inspect($selector), ' ') + 1, str-length(inspect($selector))));
		$selectors: append($selectors, selector-replace($selector, $context, $add-context + $context), comma);
		// @debug $context;
	}
	// @debug $selectors;

	@at-root #{$selectors} {
		// @debug 'before:' $add-context $target-context &;
		@content;
	}

}

/// 선택한 요소 뒤에 셀렉터 추가(.context.add, .context > .add)
// $add-context에 띄어쓰기 사용 시 > 또는 + 필수
@mixin context-after($add-context, $target-context: null) {

	$selectors: ();
	@each $selector in & {
		$context: if($target-context, $target-context, str-slice(inspect($selector), str-last-index(inspect($selector), ' ') + 1, str-length(inspect($selector))));
		$selectors: append($selectors, selector-replace($selector, $context, $context + $add-context), comma);
		// @debug $context;
	}
	// @debug $selectors;

	@at-root #{$selectors} {
		// @debug 'after:' $add-context $target-context &;
		@content;
	}

}
